@model IEnumerable<TestProject.Models.Author>

@{
    ViewData["Title"] = "Authors";
}

<h1>Authors Index</h1>

<p>
    <a asp-action="Create">Create New Author</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Surname)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BirthDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FiscalCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PhoneNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Nation)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Surname)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BirthDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FiscalCode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PhoneNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Nation)
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.AuthorID">Details</a> |
                    <a asp-action="Edit" asp-route-id="@item.AuthorID">Edit</a> |
                    
                    <form asp-action="Delete" asp-route-id="@item.AuthorID" data-ajax="true" data-ajax-success="deleteItem(this)" style="display: inline;">
                        <!-- Modal trigger -->
                        <button type="button" class="btn btn-sm btn-danger d-none d-md-inline-block" data-toggle="modal" data-target="#confirmationModal">
                            Delete
                        </button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Modal -->
<div class="modal fade" id="confirmationModal" tabindex="-1" role="dialog" aria-labelledby="confirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmationModalLabel">Alert</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this author?
            </div>
            <div class="modal-footer">
                <button id="confirmYes" type="button" class="btn btn-primary" data-dismiss="modal">Yes</button>
                <button id="confirmNo" type="button" class="btn btn-secondary" data-dismiss="modal">No</button>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        $('#confirmationModal').on('shown.bs.modal', (event) => {
            var modalTrigger = $(event.relatedTarget);
            var form = modalTrigger.parent();
            
            $('#confirmYes').on('click', () => {
                form.submit();
                $('#confirmYes').off();
            });
        });

        function deleteItem(form) {
            $(form).parents('tr').remove();
        }
    </script>
}
